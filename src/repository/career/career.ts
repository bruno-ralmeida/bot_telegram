import { CareersCategories } from '../../helpers';

export interface carrerFormat {
  category: CareersCategories;
  text: string;
}

const data: carrerFormat[] = [
  {
    category: CareersCategories.BACKEND,
    text: `O back-end developer programa a camada da aplica√ß√£o respons√°vel pela l√≥gica, servidores e mecanismos. Basicamente, √© quem faz o seu site de busca devolver o assunto pesquisado ao usu√°rio. Veja como voc√™ pode iniciar sua jornada nessa √°rea:
    Escolha uma linguagem de programa√ß√£o back-end! H√° diversas op√ß√µes para voc√™: Java, JavaScript, C#, PHP, Python, Rust, Go e Ruby. Veja qual se encaixa melhor nos seus objetivos. Ou, se voc√™ n√£o souber por onde come√ßar e adorar desenvolvimento web e mobile, d√™ uma olhadinha em JavaScript. 
    Leia sobre sistemas operacionais, comandos de shell b√°sicos, gerenciamento de processos, threads, I/O Management e comunica√ß√£o interprocessos. 
    Aplicativos de controle de vers√£o e reposit√≥rios servem para armazenar as mudan√ßas feitas no seu projeto, dando assim acesso a vers√µes anteriores da sua aplica√ß√£o caso algum rollback seja necess√°rio. O Git e o GitHub s√£o √≥timas ferramentas para isso.
    Busque sobre bancos de dados relacionais (como PostgreSQL, MySQL e MariaDB) e bancos de dados n√£o-relacionais (como MongoDB). Veja tamb√©m sobre √≠ndices e normaliza√ß√£o.
    A utiliza√ß√£o de APIs agrega valor para a aplica√ß√£o de qualquer desenvolvedor back-end. Dentre as mais √∫teis est√£o API REST, Authentication e suas variantes e JSON APIs. Fa√ßa uma pesquisa dedicada sobre elas e mais outras para encontrar as APIs que s√£o interessantes para o seu projeto.
    Entender sobre web seguran√ßa √© crucial para desenvolver aplica√ß√µes confi√°veis e saber como evitar exploits. Para isso, estude sobre protocolos de seguran√ßa utilizados na internet (como HTTPS e CORS) e sobre algoritmos hashing. 
    Todo site verdadeiramente bom foi testado para garantir a melhor experi√™ncia do usu√°rio. Incorpore essa cultura no seu processo de desenvolvimento estudando sobre integration testing, unit testing e functional testing. 
    Por √∫ltimo, mas n√£o menos importante, entenda a diferen√ßa (e as vantagens) da arquitetura de microsservi√ßos e a arquitetura monol√≠tica ao estudar estes e outros padr√µes arquiteturais, como SOA e Serverless. Tamb√©m √© uma boa oportunidade para aprender um pouco sobre virtualiza√ß√£o e conteineriza√ß√£o utilizando o Docker. 
    Ah, e se voc√™ conseguir dar uma olhada em como motores de busca funcionam e o que √© a tal de ElasticSearch, vai ser √≥timo tamb√©m!
    E a√≠, gostou do plano? Agora √© hora de colocar a m√£o na massa üöÄ.
    `,
  },
  {
    category: CareersCategories.FRONTEND,
    text: `O front-end developer programa a camada da aplica√ß√£o que √© vis√≠vel para o usu√°rio, como o design de telas, bot√µes de pesquisa, tamanho de imagens e cor do background. Veja como voc√™ pode iniciar sua jornada nessa √°rea:
    HMTL, CSS e JavaScript s√£o as principais linguagens que um profissional de front-end utiliza no dia a dia. Comece pela sintaxe e comandos b√°sicos de cada uma e fa√ßa projetos para solidificar seus conhecimentos. Sobre HTML, pesquise sobre forms, valida√ß√µes, conven√ß√µes e boas pr√°ticas. Para CSS, d√™ uma olhada em tipos de layouts, design responsivo e media queries. J√° para JavaScript, busque por manipula√ß√£o de DOM, Fetch API/Ajax, ES6+ e JavaScript modular. Tamb√©m √© recomend√°vel aprender TypeScript.
    Aplicativos de controle de vers√£o e reposit√≥rios servem para armazenar as mudan√ßas feitas no seu projeto, dando assim acesso a vers√µes anteriores da sua aplica√ß√£o caso algum rollback seja necess√°rio. O Git e o GitHub s√£o √≥timas ferramentas para isso. 
    Em seguida, aprenda sobre package managers (como yarn e npm), task runners (como npm scripts) e sobre empacotadores de m√≥dulo (como WebPack). 
    Escolha um framework para ampliar seus conhecimentos: React.js (invista em Redux ou MobX), Angular (RxJS ou NgRx) ou Vue.js (VueX). Todos estes possuem pontos positivos e negativos, mas voc√™ deve escolher o que for atender melhor ao seu projeto ou, no in√≠cio, o que parecer mais f√°cil. 
    Quando j√° estiver craque, d√™ uma olhada em SSR (Server Side Rendering) espec√≠fico para o framework escolhido e SSG (Static Site Generators) para otimizar sua p√°gina.
    Para se aprofundar com CSS, pesquise sobre styled components, CSS Modules, styled JSX e Emotion. O CSS tamb√©m possui frameworks, como Reactstrap, Material UI e Bootstrap.
    E a√≠, gostou do plano? Agora √© hora de colocar a m√£o na massa üöÄ
    `,
  },
  {
    category: CareersCategories.MOBILE,
    text: `O desenvolvedor Android √© respons√°vel por criar aplicativos para smartphones que utilizam o sistema operacional Android. Veja como voc√™ pode iniciar sua jornada nessa √°rea:
    O primeiro passo √© escolher uma linguagem: Kotlin ou Java. Apesar de ser poss√≠vel utilizar ambas em uma mesma aplica√ß√£o, a Google anunciou que Kotlin √© a favorita para desenvolvimento a partir de 2019.
    Depois, instale o Android Studio e aprenda o b√°sico de Kotlin, de POO (Programa√ß√£o Orientada a Objetos), de estruturas de dados e algoritmos. Ah, entender o que √© e como usar o Gradle ser√° fundamental na sua jornada de desenvolvedor Android!
    Aplicativos de controle de vers√£o e reposit√≥rios servem para armazenar as mudan√ßas feitas no seu projeto, dando assim acesso a vers√µes anteriores da sua aplica√ß√£o caso algum rollback seja necess√°rio. O Git e o GitHub s√£o √≥timas ferramentas para isso.
    Agora que voc√™ j√° tem uma base s√≥lida, comece a desenvolver sua aplica√ß√£o! Vou listar aqui alguns conceitos para voc√™ ler e ter em mente, mas lembre-se que a maioria deles voc√™ ir√° aprender ao longo do desenvolvimento. S√£o eles:
    Como usar Activities e Activies Lifecycles
    Construir interfaces flex√≠veis usando Fragments
    Debuggar usando o Android Studio Debugger
    Seguran√ßa para aplica√ß√µes Android
    Testes com aplica√ß√µes Android (JUnit e Espresso)
    Configura√ß√µes de aplicativos
    Como utilizar Intents
    Como utilizar Components
    Entender Context
    Aprender sobre multithreading no Android e como utiliz√°-lo em suas aplica√ß√µes
    Bibliotecas de terceiros (GSON e Glide)
    E a√≠, gostou do plano? Agora √© hora de colocar a m√£o na massa üöÄ
    `,
  },
  {
    category: CareersCategories.DEVOPS,
    text: `DevOps √© uma cultura de integra√ß√£o das equipes de desenvolvimento, de opera√ß√µes e de apoio envolvidas na produ√ß√£o de software. Pessoas dessa √°rea s√£o respons√°veis por gerir sistemas e automatizar processos. Veja como voc√™ pode iniciar sua jornada nessa √°rea:
    O primeiro passo √© escolher uma linguagem: Go, Python, Ruby, Node.js, Rust ou C++. Escolha a que tiver mais afinidade, afinal o importante aqui √© ganhar algum conhecimento sobre programa√ß√£o para que voc√™ inicie suas automa√ß√µes. Se n√£o tiver prefer√™ncia, v√° com Go.
    Leia sobre sistemas operacionais, gerenciamento de processos, threads, I/O Management, comunica√ß√£o entre processos e sistemas de arquivos. Tamb√©m neste assunto, estude sobre como gerenciar servidores em sistemas operacionais como o Ubuntu. Aprenda sobre bash scripting, monitoramento de processos, comandos b√°sicos de shell e sobre como cada um desses conceitos se diferenciam a depender do sistema operacional. 
    Pesquise tamb√©m sobre protocolos de comunica√ß√£o da web atuais, como HTTP, HTTPS, FTP, dentre outros. Entender como configurar um servidor cache, servidor proxy reverso e forward proxy, balanceador de carga ou um firewall ser√° importante para manter seus sistemas seguros e bem formulados. Al√©m disso, estude sobre web servers como Nigix ou Istio.
    Em seguida, busque pelo conceito de infraestrutura como c√≥digo (Infrastructure as Code), o que s√£o containers e como usar o Docker, gerenciamento de configura√ß√£o (utilizando Ansible), o que √© orquestra√ß√£o de containers com Kubernetes e provisionamento. Ah, d√™ uma olhada em como monitorar sua infraestrutura e suas aplica√ß√µes tamb√©m!
    Por fim, analise quais s√£o os provedores de cloud mais adequados para o seu projeto e o que s√£o cloud design patterns. 
    E a√≠, gostou do plano? Agora √© hora de colocar a m√£o na massa üöÄ
    `,
  },
  {
    category: CareersCategories.UIUX,
    text: '',
  },
];

export default data;
